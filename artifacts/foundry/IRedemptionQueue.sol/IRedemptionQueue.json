{"abi":[{"type":"function","name":"cancelQueuedRedemption","inputs":[{"name":"queueIndex","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearQueue","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"compactQueue","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getNextRedemption","inputs":[],"outputs":[{"name":"redemption","type":"tuple","internalType":"struct IRedemptionQueue.QueuedRedemption","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"assets","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getQueueLength","inputs":[],"outputs":[{"name":"queueLength","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getQueueStats","inputs":[],"outputs":[{"name":"queueLength","type":"uint256","internalType":"uint256"},{"name":"totalShares","type":"uint256","internalType":"uint256"},{"name":"totalAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getQueuedRedemption","inputs":[{"name":"queueIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"redemption","type":"tuple","internalType":"struct IRedemptionQueue.QueuedRedemption","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"assets","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getQueuedRedemptionsForOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"queueIndexes","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalQueuedForOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"totalShares","type":"uint256","internalType":"uint256"},{"name":"totalAssets","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isQueueEmpty","inputs":[],"outputs":[{"name":"isEmpty","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"queueRedemption","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"queueIndex","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeAmountFromFirstOwner","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"nextRedemption","type":"tuple","internalType":"struct IRedemptionQueue.QueuedRedemption","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"assets","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"setFactoringContract","inputs":[{"name":"_factoringContract","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"RedemptionCancelled","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"queueIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RedemptionProcessed","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"queueIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RedemptionQueued","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"queueIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancelQueuedRedemption(uint256)":"e7b59816","clearQueue()":"f22cb874","compactQueue()":"5ff3af66","getNextRedemption()":"47627adb","getQueueLength()":"b8f77005","getQueueStats()":"452656ab","getQueuedRedemption(uint256)":"038fc3c7","getQueuedRedemptionsForOwner(address)":"8f77d4d6","getTotalQueuedForOwner(address)":"1c586a6b","isQueueEmpty()":"2bbba847","queueRedemption(address,address,uint256,uint256)":"9071ffbb","removeAmountFromFirstOwner(uint256)":"dac52f2d","setFactoringContract(address)":"358d7610"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"name\":\"RedemptionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"name\":\"RedemptionProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"name\":\"RedemptionQueued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"name\":\"cancelQueuedRedemption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compactQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextRedemption\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"internalType\":\"struct IRedemptionQueue.QueuedRedemption\",\"name\":\"redemption\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQueueLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"queueLength\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQueueStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"queueLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"name\":\"getQueuedRedemption\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"internalType\":\"struct IRedemptionQueue.QueuedRedemption\",\"name\":\"redemption\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getQueuedRedemptionsForOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"queueIndexes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getTotalQueuedForOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isQueueEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isEmpty\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"queueRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"queueIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeAmountFromFirstOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"internalType\":\"struct IRedemptionQueue.QueuedRedemption\",\"name\":\"nextRedemption\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factoringContract\",\"type\":\"address\"}],\"name\":\"setFactoringContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles both share-based redemptions and asset-based withdrawals in FIFO order\",\"kind\":\"dev\",\"methods\":{\"cancelQueuedRedemption(uint256)\":{\"params\":{\"queueIndex\":\"The index of the redemption to cancel\"}},\"compactQueue()\":{\"details\":\"Can be called to clean up memory and reduce gas costs for subsequent operations\"},\"getNextRedemption()\":{\"returns\":{\"redemption\":\"The next queued redemption, or empty struct if queue is empty\"}},\"getQueueLength()\":{\"returns\":{\"queueLength\":\"Number of queued redemptions\"}},\"getQueueStats()\":{\"returns\":{\"queueLength\":\"The number of active redemptions in the queue\",\"totalAssets\":\"The total assets queued for withdrawal\",\"totalShares\":\"The total shares queued for redemption  \"}},\"getQueuedRedemption(uint256)\":{\"params\":{\"queueIndex\":\"The index of the redemption to retrieve\"},\"returns\":{\"redemption\":\"The queued redemption at the specified index\"}},\"getQueuedRedemptionsForOwner(address)\":{\"params\":{\"owner\":\"The owner to search for\"},\"returns\":{\"queueIndexes\":\"Array of queue indexes where the owner has queued redemptions\"}},\"getTotalQueuedForOwner(address)\":{\"params\":{\"owner\":\"The owner to check\"},\"returns\":{\"totalAssets\":\"Total assets queued for withdrawal\",\"totalShares\":\"Total shares queued for redemption\"}},\"isQueueEmpty()\":{\"returns\":{\"isEmpty\":\"True if the queue is empty\"}},\"queueRedemption(address,address,uint256,uint256)\":{\"params\":{\"assets\":\"Amount of assets to withdraw (0 for share-based redemptions)\",\"owner\":\"The owner of the shares/assets being redeemed\",\"receiver\":\"The address to receive the redeemed assets\",\"shares\":\"Amount of shares to redeem (0 for asset-based withdrawals)\"},\"returns\":{\"queueIndex\":\"The position in the queue\"}},\"removeAmountFromFirstOwner(uint256)\":{\"details\":\"If amount equals the total queued amount, removes the entire entryIf amount is less than total, reduces the queued amount  \",\"params\":{\"amount\":\"The amount to remove (shares or assets depending on redemption type)\"},\"returns\":{\"nextRedemption\":\"The next redemption in line to be processed\"}},\"setFactoringContract(address)\":{\"params\":{\"_factoringContract\":\"The new factoring contract address\"}}},\"title\":\"IRedemptionQueue\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelQueuedRedemption(uint256)\":{\"notice\":\"Allow a user to cancel their queued redemption request\"},\"clearQueue()\":{\"notice\":\"Emergency function to clear the entire queue (owner only)\"},\"compactQueue()\":{\"notice\":\"Compacts the queue by removing processed items before the head\"},\"getNextRedemption()\":{\"notice\":\"Get the next redemption in line to be processed\"},\"getQueueLength()\":{\"notice\":\"Get the total length of the redemption queue\"},\"getQueueStats()\":{\"notice\":\"Gets the total queue statistics including length and totals\"},\"getQueuedRedemption(uint256)\":{\"notice\":\"Get a specific queued redemption by index\"},\"getQueuedRedemptionsForOwner(address)\":{\"notice\":\"Get all queue indexes for a specific owner\"},\"getTotalQueuedForOwner(address)\":{\"notice\":\"Get the total queued shares and assets for a specific owner\"},\"isQueueEmpty()\":{\"notice\":\"Check if the redemption queue is empty\"},\"queueRedemption(address,address,uint256,uint256)\":{\"notice\":\"Queue a redemption request when insufficient liquidity is available\"},\"removeAmountFromFirstOwner(uint256)\":{\"notice\":\"Remove a specific amount from the first queued redemption\"},\"setFactoringContract(address)\":{\"notice\":\"Set the factoring contract address that can manage the queue\"}},\"notice\":\"Interface for a redemption queue that manages pending redemptions when pool liquidity is insufficient\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRedemptionQueue.sol\":\"IRedemptionQueue\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aragon/=node_modules/@aragon/\",\":@bulla-network/=node_modules/@bulla-network/\",\":@bulla/=node_modules/@bulla/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":bulla-contracts-v2/=node_modules/@bulla/contracts-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=node_modules/@openzeppelin/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IRedemptionQueue.sol\":{\"keccak256\":\"0x27bae2b433740124c5b50629437b8ab45279cc9662b4333eb861be88d3f4ecdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41a5d169d0a91ca79cca52b75e3456eccaedf8af75850ea4456055a50793624c\",\"dweb:/ipfs/QmY84HnKfsCCZobTfTwU1p6Z4H3RJTf4HMXWVgkor9PamM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"queueIndex","type":"uint256","indexed":false}],"type":"event","name":"RedemptionCancelled","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false},{"internalType":"uint256","name":"queueIndex","type":"uint256","indexed":false}],"type":"event","name":"RedemptionProcessed","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256","name":"shares","type":"uint256","indexed":false},{"internalType":"uint256","name":"assets","type":"uint256","indexed":false},{"internalType":"uint256","name":"queueIndex","type":"uint256","indexed":false}],"type":"event","name":"RedemptionQueued","anonymous":false},{"inputs":[{"internalType":"uint256","name":"queueIndex","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"cancelQueuedRedemption"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearQueue"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"compactQueue"},{"inputs":[],"stateMutability":"view","type":"function","name":"getNextRedemption","outputs":[{"internalType":"struct IRedemptionQueue.QueuedRedemption","name":"redemption","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"assets","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getQueueLength","outputs":[{"internalType":"uint256","name":"queueLength","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getQueueStats","outputs":[{"internalType":"uint256","name":"queueLength","type":"uint256"},{"internalType":"uint256","name":"totalShares","type":"uint256"},{"internalType":"uint256","name":"totalAssets","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"queueIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"getQueuedRedemption","outputs":[{"internalType":"struct IRedemptionQueue.QueuedRedemption","name":"redemption","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"assets","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"getQueuedRedemptionsForOwner","outputs":[{"internalType":"uint256[]","name":"queueIndexes","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"getTotalQueuedForOwner","outputs":[{"internalType":"uint256","name":"totalShares","type":"uint256"},{"internalType":"uint256","name":"totalAssets","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isQueueEmpty","outputs":[{"internalType":"bool","name":"isEmpty","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"queueRedemption","outputs":[{"internalType":"uint256","name":"queueIndex","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeAmountFromFirstOwner","outputs":[{"internalType":"struct IRedemptionQueue.QueuedRedemption","name":"nextRedemption","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"assets","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"_factoringContract","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setFactoringContract"}],"devdoc":{"kind":"dev","methods":{"cancelQueuedRedemption(uint256)":{"params":{"queueIndex":"The index of the redemption to cancel"}},"compactQueue()":{"details":"Can be called to clean up memory and reduce gas costs for subsequent operations"},"getNextRedemption()":{"returns":{"redemption":"The next queued redemption, or empty struct if queue is empty"}},"getQueueLength()":{"returns":{"queueLength":"Number of queued redemptions"}},"getQueueStats()":{"returns":{"queueLength":"The number of active redemptions in the queue","totalAssets":"The total assets queued for withdrawal","totalShares":"The total shares queued for redemption  "}},"getQueuedRedemption(uint256)":{"params":{"queueIndex":"The index of the redemption to retrieve"},"returns":{"redemption":"The queued redemption at the specified index"}},"getQueuedRedemptionsForOwner(address)":{"params":{"owner":"The owner to search for"},"returns":{"queueIndexes":"Array of queue indexes where the owner has queued redemptions"}},"getTotalQueuedForOwner(address)":{"params":{"owner":"The owner to check"},"returns":{"totalAssets":"Total assets queued for withdrawal","totalShares":"Total shares queued for redemption"}},"isQueueEmpty()":{"returns":{"isEmpty":"True if the queue is empty"}},"queueRedemption(address,address,uint256,uint256)":{"params":{"assets":"Amount of assets to withdraw (0 for share-based redemptions)","owner":"The owner of the shares/assets being redeemed","receiver":"The address to receive the redeemed assets","shares":"Amount of shares to redeem (0 for asset-based withdrawals)"},"returns":{"queueIndex":"The position in the queue"}},"removeAmountFromFirstOwner(uint256)":{"details":"If amount equals the total queued amount, removes the entire entryIf amount is less than total, reduces the queued amount  ","params":{"amount":"The amount to remove (shares or assets depending on redemption type)"},"returns":{"nextRedemption":"The next redemption in line to be processed"}},"setFactoringContract(address)":{"params":{"_factoringContract":"The new factoring contract address"}}},"version":1},"userdoc":{"kind":"user","methods":{"cancelQueuedRedemption(uint256)":{"notice":"Allow a user to cancel their queued redemption request"},"clearQueue()":{"notice":"Emergency function to clear the entire queue (owner only)"},"compactQueue()":{"notice":"Compacts the queue by removing processed items before the head"},"getNextRedemption()":{"notice":"Get the next redemption in line to be processed"},"getQueueLength()":{"notice":"Get the total length of the redemption queue"},"getQueueStats()":{"notice":"Gets the total queue statistics including length and totals"},"getQueuedRedemption(uint256)":{"notice":"Get a specific queued redemption by index"},"getQueuedRedemptionsForOwner(address)":{"notice":"Get all queue indexes for a specific owner"},"getTotalQueuedForOwner(address)":{"notice":"Get the total queued shares and assets for a specific owner"},"isQueueEmpty()":{"notice":"Check if the redemption queue is empty"},"queueRedemption(address,address,uint256,uint256)":{"notice":"Queue a redemption request when insufficient liquidity is available"},"removeAmountFromFirstOwner(uint256)":{"notice":"Remove a specific amount from the first queued redemption"},"setFactoringContract(address)":{"notice":"Set the factoring contract address that can manage the queue"}},"version":1}},"settings":{"remappings":["@aragon/=node_modules/@aragon/","@bulla-network/=node_modules/@bulla-network/","@bulla/=node_modules/@bulla/","@ensdomains/=node_modules/@ensdomains/","@gnosis.pm/=node_modules/@gnosis.pm/","@openzeppelin/=node_modules/@openzeppelin/","bulla-contracts-v2/=node_modules/@bulla/contracts-v2/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","openzeppelin-contracts/=node_modules/@openzeppelin/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IRedemptionQueue.sol":"IRedemptionQueue"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IRedemptionQueue.sol":{"keccak256":"0x27bae2b433740124c5b50629437b8ab45279cc9662b4333eb861be88d3f4ecdc","urls":["bzz-raw://41a5d169d0a91ca79cca52b75e3456eccaedf8af75850ea4456055a50793624c","dweb:/ipfs/QmY84HnKfsCCZobTfTwU1p6Z4H3RJTf4HMXWVgkor9PamM"],"license":"MIT"}},"version":1},"id":14}